generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Case {
  id         Int       @id(map: "_Case_pkey") @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  title      String?
  body       String?
  templates  Int?
  data       Json?
  user_id    String?
  Template   Template? @relation(fields: [templates], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User       User?     @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  warrants   Warrant[]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
  Case          Case[]
  Fields        Fields[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Fields {
  id                Int     @id(map: "Case_pkey") @default(autoincrement())
  userId            String?
  caseAgentName     String?
  county            String?
  causeNumber       Int?
  Superior          String?
  Circuit           String?
  districtCourt     String?
  officerName       String?
  agencyName        String?
  beginDate         String?
  title             String?
  unit              String?
  district          String?
  academyName       String?
  academyDate       String?
  pertinentTraining String?
  searchPeriodFrom  String?
  searchPeriodTo    String?
  User              User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Template {
  id         Int       @id(map: "Templates_pkey") @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  html       String?
  fields     Json?     @db.Json
  Case       Case[]
}

model Warrant {
  id         Int       @id @default(autoincrement())
  caseId     Int?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  title      String?
  body       String?
  data       Json?
  html       String?
  case       Case?     @relation(fields: [caseId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum UserRole {
  ADMIN
  USER
}
